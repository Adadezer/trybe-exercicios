/* 
  O MongoDB possui diversas ferramentas como, por exemplo, mongo, mongosh, Compass e outras ferramentas de terceiros.
  Voc√™ pode utilizar o que achar melhor para executar as queries, o importante √© realiz√°-las.
Utilizando a cole√ß√£o bios, construa queries para retornar os seguintes itens:
*/

//  Exerc√≠cio 1: Retorne o documento com o _id igual a 8.
db.bios.find({_id: 8});
//  Exerc√≠cio 2: Retorne o documento com o _id igual a 8, mas s√≥ exiba os atributos: _id e name.
db.bios.find({_id: 8}, {name: true})
//üöÄ Exerc√≠cio 3: Retorne apenas os atributos name e birth do documento com o _id igual a 8.
db.bios.find({_id: 8}, {name: true, birth: true, _id: false});
//  Exerc√≠cio 4: Retorne todos os documentos em que o atributo name.first seja igual a John, utilizando o m√©todo pretty().
db.bios.find({"name.first": "John"}).pretty();
//  Exerc√≠cio 5: Retorne os 3 primeiros documentos da cole√ß√£o bios utilizando o m√©todo pretty().
db.bios.find().limit(3).pretty();
//  Exerc√≠cio 6: Retorne 2 documentos da cole√ß√£o bios pulando os 5 primeiros documentos.
db.bios.find().skip(5).limit(2);

/*  Utilizando o mongoimport, importe o arquivo books.json para a sua inst√¢ncia local do MongoDB
    e utilize a cole√ß√£o books para construir as seguintes consultas:
*/

//üöÄ Exerc√≠cio 7: Retorne a quantidade de documentos da cole√ß√£o books.
use ("class");
db.books.countDocuments({})
//üöÄ Exerc√≠cio 8: Conte quantos livros existem com o status = "PUBLISH".
use ("class");
db.books.countDocuments({ status: "PUBLISH" })
//üöÄ Exerc√≠cio 9: Exiba os atributos title, isbn e pageCount dos 3 primeiros livros. N√ÉO retorne o atributo _id.
use ("class");
db.books.find({}, {title: true, isbn: true, pageCount: true, _id: false}).limit(3)
//  Exerc√≠cio 10: Pule 5 documentos e exiba os atributos _id, title, authors e status dos livros com o status = "MEAP", limitando-se a 10 documentos.
use ("class");
db.books.find({status: "MEAP"}, {title: true, authors: true, status: true}).limit(10).skip(5)
